name: "ðŸ”¥ Taging and Deploy"

on:
  push:
    tags:
      - "*"
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  CLUSTER_NAME: https://tcc-01.th1.proen.cloud/api/

jobs:
  checkout_image:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag_step.outputs.previous_image_tag }}
    environment: prod
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone nonprod repository
        uses: actions/checkout@v2
        with:
          repository: 'the-cloud-camp/tcc-k8s-config-nonprd'
          token: ${{ secrets.GH_PAT }}  # Use your PAT for private repositories
          path: 'tcc-k8s-config-nonprd'

      - name: Get Image Tag
        run: |
          # Change to the directory where the other repository was cloned
          cd tcc-k8s-config-nonprd
          previous_image_tag=$(yq e '.spec.template.spec.containers[0].image' kai-nuxtjs/deployment.yaml | cut -d ':' -f 2)
          echo "previous_image_tag=$previous_image_tag" >> $GITHUB_ENV
          echo "::set-output name=previous_image_tag::$previous_image_tag"  # Set step output
          
  tagging:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    environment: prod
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout tag on repository
        uses: actions/checkout@v3

      - name: Cat version
        run: |-
          cat package.json | jq -r .version
          echo "IMAGE_TAG=$(cat package.json | jq -r .version)" >> $GITHUB_ENV

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Retag Image
        run: |
          original_tag=${{ needs.checkout_image.outputs.previous_image_tag }}
          source $GITHUB_ENV
          new_tag=$IMAGE_TAG  # Define your new tag here

          # Assuming you are using Docker
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$original_tag
          docker tag  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$original_tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$new_tag
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$new_tag
      
  set_version_image:     
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone nonprod repository
        uses: actions/checkout@v2
        with:
          repository: 'the-cloud-camp/tcc-k8s-config'
          token: ${{ secrets.GH_PAT }}  # Use your PAT for private repositories
          path: 'tcc-k8s-config'
      
      - name: Set Image Tag
        working-directory: tcc-k8s-config
        run: |
          # Change to the directory where the other repository was cloned
          cd tcc-k8s-config
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq &&\
          chmod +x /usr/bin/yq
          export IMAGE_RETAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.tagging.outputs.image_tag }}
          echo "$IMAGE_RETAG"
          yq -i '.spec.template.spec.containers[0].image = strenv(IMAGE_RETAG) ' kai-nuxtjs/deployment.yaml

      - name: Update repository
        working-directory: tcc-k8s-config
        run: |-
          git config --global user.email "support@dependabot.com"
          git config --global user.name "dependabot[bot]"
          git commit -am "release ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.tagging.outputs.image_tag }}"
          git push origin main